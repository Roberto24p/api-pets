{
  "_from": "prototypes@^2.3.3",
  "_id": "prototypes@2.3.5",
  "_inBundle": false,
  "_integrity": "sha512-Nci0TWpCnv5RBbQSW4XpA5MPVljlRX9Q9uDNyxmzsoWBX4pQ/X2pDo3HC7ks3ksmEmeetZDRPPE3kwWb46vDpw==",
  "_location": "/prototypes",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "prototypes@^2.3.3",
    "name": "prototypes",
    "escapedName": "prototypes",
    "rawSpec": "^2.3.3",
    "saveSpec": null,
    "fetchSpec": "^2.3.3"
  },
  "_requiredBy": [
    "/microprofiler"
  ],
  "_resolved": "https://registry.npmjs.org/prototypes/-/prototypes-2.3.5.tgz",
  "_shasum": "9ec5236ec299a85379214606c73186389f0efed9",
  "_spec": "prototypes@^2.3.3",
  "_where": "/home/roberto/Documentos/nodejs/Api-Pets/node_modules/microprofiler",
  "bugs": {
    "url": "https://github.com/alexfernandez/prototypes/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Alex Fern√°ndez",
      "email": "alexfernandeznpm@gmail.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Some common prototypes for node.js: string.startsWith(), object.countProperties() and more. Facilities for functional programming with objects: object.forEach(), object.filter(). Functions are added safely using Object.defineProperty().",
  "devDependencies": {
    "testing": "^1.1.2"
  },
  "engines": {
    "node": "*"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "homepage": "https://github.com/alexfernandez/prototypes",
  "keywords": [
    "prototypes",
    "prototype",
    "string",
    "object",
    "functional programming",
    "functional"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "prototypes",
  "preferGlobal": false,
  "private": false,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexfernandez/prototypes.git"
  },
  "scripts": {
    "test": "node runTests.js"
  },
  "version": "2.3.5"
}
